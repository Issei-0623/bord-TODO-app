.authenticate-page
  .auth-title
    %h1.auth-title__text Board Todo App

    -# ドロップダウンメニュー（ボード一覧、プロフィール、ログイン/ログアウト）
    .global-menu.dropdown{ data: { controller: "dropdown" } }
      = image_tag "menu.svg",
        class: "menu-btn",
        alt: "Menu",
        loading: "lazy",
        data: { action: "click->dropdown#toggle" }
      .dropdown-menu.hidden{ data: { dropdown_target: "menu" } }
        = link_to 'ボード新規作成', new_board_path
        = link_to 'ボード一覧', boards_path
        = link_to 'プロフィールページ', profile_path
        - if user_signed_in?
          = link_to 'ログアウト', destroy_user_session_path, method: :delete, data: { turbo: false }, class: 'btn'
        - else
          = link_to 'ログイン / 新規ユーザー登録', new_user_session_path, class: 'btn'

  .cards-container
    -# 最新のボードを繰り返し表示
    - @latest_boards.each do |board|
      -# カード全体をクリック可能にする（Stimulus Controller: cardlink）
      .authenticate-card{
        data: {
          controller: "cardlink",
          cardlink_url_value: board_path(board),
          action: "click->cardlink#go keydown->cardlink#key"
        },
        role: "link",
        tabindex: 0
      }

        -# ボード見出し（タイトル + ユーザーアバター）
        = link_to board_path(board), class: 'board-head-link', data: { cardlink_ignore: true } do
          .board-head
            %span.board-label= board.title
            = image_tag board.user.avatar_url,
              class: 'avatar avatar--sm',
              alt: 'Board owner',
              loading: 'lazy', width: 24, height: 24

        -# ボードの説明
        - if board.content.present?
          .board-description= board.content

        .task-list
          - if board.tasks.empty?
            = link_to board_path(board), class: 'task-empty-link', data: { cardlink_ignore: true } do
              .task-empty
                %p まだタスクがありません
          - else
            - board.tasks.order(created_at: :desc).each do |task|
              .task-card
                .task-card__row
                  -# タスクタイトル（ログイン済みなら詳細へ、未ログインならログイン画面へ）
                  - if user_signed_in?
                    = link_to task.title, board_task_path(board, task), class: 'task-title'
                  - else
                    = link_to task.title, new_user_session_path, class: 'task-title'

                  -# 自分が作成したタスクなら、編集・削除ボタンを表示
                  - if user_signed_in? && task.user == current_user
                    .dropdown{ data: { controller: "dropdown" } }
                      = image_tag 'actions.svg',
                        class: 'dropbtn',
                        alt: 'Actions',
                        data: { action: "click->dropdown#toggle", cardlink_ignore: true }
                      .dropdown-menu.hidden{ data: { dropdown_target: "menu" } }
                        = link_to '編集',  edit_board_task_path(board, task), data: { cardlink_ignore: true }
                        = link_to '削除',
                          board_task_path(board, task),
                          method: :delete,
                          data: { turbo_confirm: '本当に削除しますか？', cardlink_ignore: true }

                -# 期限が設定されている場合は表示
                .task-card__deadline
                  - if task.deadline.present?
                    %span.deadline-label 期限:
                    %span= l(task.deadline, format: :long)

                -# タスク作成者のアバター + 表示名（ニックネーム or メール）
                .task-card__meta
                  = image_tag task.user.avatar_url, class: 'avatar avatar--sm', alt: 'Task owner', loading: 'lazy'
                  %span= task.user.profile&.nickname.presence || task.user.email

                -# コメント数を表示（0件のときは`is-zero`クラス付与）
                - count = task.comments.size
                .task-card__comments{ class: (count.zero? ? 'is-zero' : nil) }
                  = image_tag 'comment.svg', alt: 'Comments', width: 16, height: 16, loading: 'lazy'
                  %span= count

        -# カード下部：+タスク追加ボタン（ログインしていれば表示）
        .card-footer
          - if user_signed_in?
            = link_to '+ タスク追加',
              board_path(board, anchor: 'new-task'),
              class: 'btn-primary',
              data: { cardlink_ignore: true }
          - else
            = link_to 'ログインしてタスク追加',
              new_user_session_path,
              class: 'btn-primary',
              data: { cardlink_ignore: true }

  -# ページ送り（前へ）
  - if @page > 1
    = link_to '‹', root_path(page: @page - 1, per_page: @per_page), class: 'page-arrow page-arrow--left', aria_label: '前へ'

  -# ページ送り（次へ）
  - if @page < @total_pages
    = link_to '›', root_path(page: @page + 1, per_page: @per_page), class: 'page-arrow page-arrow--right', aria_label: '次へ'

